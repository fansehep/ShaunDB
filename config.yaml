# 日志的设置
# @log_path:     日志输出的路径
# @log_lev:      日志输出的等级
# @log_name:     日志输出的名称
# @log_issync:   日志是否同步写(同步写入会损失性能, 但可以减少日志损失)
# @log_buf_size: 每个线程的日志buf容量限制. 当你的服务比较大时建议, 开启大容量
log_config:
  log_path: ./
  log_lev: STD_OUT
  log_name: shaun_server
  log_issync: false
  log_buf_size: 16mb

# TcpServer 设置
# @listen_ip:    监听的 ip
# @listen_port:  监听的 port
server_config:
  listen_ip: 192.168.30.162
  listen_port: 9090

# kv 引擎的设置
# @ lru_cache_size:    每个 memtable 都拥有一个 lrucache
# @ memtable_counts:   内存表的数量
# @ memtable_mem_size: 内存表的峰值内存容量
# @ compactor_counts:  Compactor 的数量
# @ max_level_size:    lsm tree 的峰值层数
# @ db_path:           数据库存放文件目录
# @ wal_path:          预写日志目录
db_config:
  lru_cache_size: 32
  memtable_counts: 8
  memtable_mem_size: 256
  compactor_counts: 2
  max_level_size: 7
  db_path: "/tmp",
  wal_path: "/tmp",


# raft副本模式配置
# @ node_counts:        节点数量
# @ node_ip_ports:      node_1 "向外监听 IP + Port"
# @ max_election_ms:    最大选举超时时间(ms)
# @ min_election_ms:    最小选举超时时间(ms)
# @ append_interval_ms: 心跳(日志复制)间隔时间
raft_config:
  node_counts: 3
  node_ip_ports:
   - node_1: "192.168.30.12:4989"
   - node_2: "192.168.30.14:4989"
   - node_3: "192.168.30.13:4989"
  max_election_interval_ms: 700
  min_election_interval_ms: 1000
  append_interval_ms: 200